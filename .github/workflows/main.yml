name: Foodgram_workflow

on:
  push:
    branches: [master]

jobs:
  preparations:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: 3.7

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r backend/requirements.txt


  build_and_push_to_docker_hub:
      name: Push Docker image to Docker Hub
      runs-on: ubuntu-latest
      needs: preparations
      steps:
        - name: Check out the repo
          uses: actions/checkout@v3
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v1
        - name: Login to Docker
          uses: docker/login-action@v1
          with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}
        - name: Push backend to Docker Hub
          uses: docker/build-push-action@v2
          with:
            push: true
            context: ./backend
            tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_backend:v1
        - name: Push frontend to Docker Hub
          uses: docker/build-push-action@v2
          with:
            push: true
            context: ./frontend
            tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_frontend:v1

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            sudo docker compose stop
            sudo docker compose rm backend
            sudo rm .env
            sudo touch .env
            sudo echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
            sudo echo DB_NAME=${{ secrets.DB_NAME }} >> .env
            sudo echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            sudo echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            sudo echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            sudo echo DB_PORT=${{ secrets.DB_PORT }} >> .env
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/foodgram_backend:v1
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/foodgram_frontend:v1
            sudo docker compose up -d
